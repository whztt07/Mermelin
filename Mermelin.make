# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = bin/debug
  TARGET     = $(TARGETDIR)/Mermelin
  DEFINES   += -DDEBUG
  INCLUDES  += -Iheaders -I/usr/include/OGRE -I/usr/include/ois -I/usr/local/include -I/usr/local/include/bullet -I/usr/local/include/bullet/ConvexDecomposition
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -std=c++0x -O2 -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L/usr/lib/OGRE -L/usr/local/lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  PCH        = headers/stdafx.h
  GCH        = $(OBJDIR)/stdafx.h.gch
  CPPFLAGS  += -I$(OBJDIR) -include $(OBJDIR)/stdafx.h
  LIBS      += -lOgreMain -lOgreTerrain -lOIS -lBulletDynamics -lBulletCollision -lLinearMath -lsfml-system -lsfml-audio -lpthread -lRocketCore -lRocketControls
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = bin/release
  TARGET     = $(TARGETDIR)/Mermelin
  DEFINES   += -DNDEBUG
  INCLUDES  += -Iheaders -I/usr/include/OGRE -I/usr/include/ois -I/usr/local/include -I/usr/local/include/bullet -I/usr/local/include/bullet/ConvexDecomposition
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -std=c++0x -O3
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L/usr/lib/OGRE -L/usr/local/lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib -s
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  PCH        = headers/stdafx.h
  GCH        = $(OBJDIR)/stdafx.h.gch
  CPPFLAGS  += -I$(OBJDIR) -include $(OBJDIR)/stdafx.h
  LIBS      += -lOgreMain -lOgreTerrain -lOIS -lBulletDynamics -lBulletCollision -lLinearMath -lsfml-system -lsfml-audio -lpthread -lRocketCore -lRocketControls
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/Event.o \
	$(OBJDIR)/Engine.o \
	$(OBJDIR)/Main.o \
	$(OBJDIR)/InputComponent.o \
	$(OBJDIR)/PhysicsComponent.o \
	$(OBJDIR)/GraphicComponent.o \
	$(OBJDIR)/GhostComponent.o \
	$(OBJDIR)/AudioComponent.o \
	$(OBJDIR)/LogicModule.o \
	$(OBJDIR)/AudioModule.o \
	$(OBJDIR)/InputModule.o \
	$(OBJDIR)/GUIModule.o \
	$(OBJDIR)/GraphicModule.o \
	$(OBJDIR)/PhysicsModule.o \
	$(OBJDIR)/AudioManager.o \
	$(OBJDIR)/LevelManager.o \
	$(OBJDIR)/Level.o \
	$(OBJDIR)/Audio.o \
	$(OBJDIR)/BtOgre.o \
	$(OBJDIR)/Condition.o \
	$(OBJDIR)/Trigger.o \
	$(OBJDIR)/IntroState.o \
	$(OBJDIR)/GameState.o \
	$(OBJDIR)/PlayState.o \
	$(OBJDIR)/EarthShader.o \
	$(OBJDIR)/WaterShader.o \
	$(OBJDIR)/RotationShader.o \
	$(OBJDIR)/AirShader.o \
	$(OBJDIR)/Shader.o \
	$(OBJDIR)/FireShader.o \
	$(OBJDIR)/WoodWall.o \
	$(OBJDIR)/Button.o \
	$(OBJDIR)/Sphere.o \
	$(OBJDIR)/TypeChanger.o \
	$(OBJDIR)/Rotor.o \
	$(OBJDIR)/Entity.o \
	$(OBJDIR)/Door.o \
	$(OBJDIR)/Goal.o \
	$(OBJDIR)/GroundPlate.o \
	$(OBJDIR)/Camera.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Mermelin
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Mermelin
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	-$(SILENT) cp $< $(OBJDIR)
else
	$(SILENT) xcopy /D /Y /Q "$(subst /,\,$<)" "$(subst /,\,$(OBJDIR))" 1>nul
endif
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
endif

$(OBJDIR)/Event.o: src/Event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Engine.o: src/Engine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Main.o: src/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/InputComponent.o: src/Components/InputComponent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/PhysicsComponent.o: src/Components/PhysicsComponent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GraphicComponent.o: src/Components/GraphicComponent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GhostComponent.o: src/Components/GhostComponent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/AudioComponent.o: src/Components/AudioComponent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/LogicModule.o: src/Modules/LogicModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/AudioModule.o: src/Modules/AudioModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/InputModule.o: src/Modules/InputModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GUIModule.o: src/Modules/GUIModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GraphicModule.o: src/Modules/GraphicModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/PhysicsModule.o: src/Modules/PhysicsModule.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/AudioManager.o: src/Resources/Managers/AudioManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/LevelManager.o: src/Resources/Managers/LevelManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Level.o: src/Resources/Files/Level.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Audio.o: src/Resources/Files/Audio.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/BtOgre.o: src/External/BtOgre/BtOgre.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Condition.o: src/Logic/Condition.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Trigger.o: src/Logic/Trigger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/IntroState.o: src/GameStates/IntroState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GameState.o: src/GameStates/GameState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/PlayState.o: src/GameStates/PlayState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/EarthShader.o: src/Shaders/EarthShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/WaterShader.o: src/Shaders/WaterShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/RotationShader.o: src/Shaders/RotationShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/AirShader.o: src/Shaders/AirShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Shader.o: src/Shaders/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/FireShader.o: src/Shaders/FireShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/WoodWall.o: src/Entities/WoodWall.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Button.o: src/Entities/Button.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Sphere.o: src/Entities/Sphere.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/TypeChanger.o: src/Entities/TypeChanger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Rotor.o: src/Entities/Rotor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Entity.o: src/Entities/Entity.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Door.o: src/Entities/Door.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Goal.o: src/Entities/Goal.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/GroundPlate.o: src/Entities/GroundPlate.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Camera.o: src/Entities/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"

-include $(OBJECTS:%.o=%.d)
